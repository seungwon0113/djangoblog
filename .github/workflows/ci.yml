name: Django CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: djangoblog
          POSTGRES_USER: djangoblog
          POSTGRES_PASSWORD: djangoblog
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        
    - name: Install Dependencies
      working-directory: ./backend
      run: |
        poetry config virtualenvs.create false
        poetry install --no-root

    - name: Run Tests
      working-directory: ./backend
      env:
        DJANGO_SECRET_KEY: django-insecure-test-key
        DB_NAME: djangoblog
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: database
        DB_PORT: 5432
        EMAIL_HOST: smtp.gmail.com
        EMAIL_PORT: 587
        EMAIL_USE_TLS: True
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      run: |
        poetry run python manage.py test

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        logout: false
    
    - name: Create .env file
      run: |
        cat << EOF > .env
        DJANGO_SECRET_KEY=django-insecure-test-key
        DB_NAME=djangoblog
        DB_USER=${{ secrets.DB_USER }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_HOST=database
        DB_PORT=5432
        DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
        EOF
    
    - name: Build and push Docker images
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker compose build
        docker compose push
