services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ${DOCKER_USERNAME}/backend:latest
    platform: linux/amd64
    ports:
      - 8000:8000
    volumes:
      - ./backend:/backend
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - app-network
    command: /start.sh

  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    image: ${DOCKER_USERNAME}/database:latest
    platform: linux/amd64
    ports:
      - 5432:5432
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
