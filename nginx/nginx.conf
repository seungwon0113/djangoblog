upstream django {
    server backend:8000;
}

map $http_origin $cors_origin {
    default "";
    "http://slog.my" "$http_origin";
    "http://www.slog.my" "$http_origin";
    "http://211.188.60.26" "$http_origin";
    "https://slog.my" "$http_origin";
    "https://www.slog.my" "$http_origin";
}

server {
    listen 80 default_server;
    server_name slog.my www.slog.my;
    client_max_body_size 100M;

    # CORS 설정
    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # certbot 인증을 위한 경로
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass http://django;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Origin $http_origin;
        
        # 타임아웃 설정
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        
        # 버퍼 설정
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # 오류 처리
        proxy_intercept_errors on;
        error_page 502 = @backend_down;
    }

    location @backend_down {
        return 502 "Backend is currently unavailable. Please try again later.";
    }

    location /static/ {
        alias /static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri $uri/ =404;
        access_log off;
    }

    location /media/ {
        alias /media/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri $uri/ =404;
        access_log off;
    }

    # 오류 페이지 설정
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 